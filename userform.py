from tkinter import *
import customtkinter as ctk
from tkinter import messagebox
from tkcalendar import *
from openpyxl import *
from openpyxl.styles import Font
from tkinter import ttk


def clear():

    txt_reg.configure(fg='#a6a6a6')
    reg.set(' Autogenerated ')

    txt_name.configure(fg='#a6a6a6')
    sname.set(' Enter Fullname ')

    txt_dob.configure(fg='#a6a6a6')
    dob.set(' DD/MM/YYYY ')

    txt_usn.configure(fg='#a6a6a6')
    usn.set(' Enter USN ')

    branch_val.set(' Select the Branch ')

    sec_val.set(' Select the Section ')

    sem_val.set(' Select the Semester ')

    txt_aadhar.configure(fg='#a6a6a6')
    aadhar.set(' xxxx-xxxx-xxxx ')

    txt_phone.configure(fg='#a6a6a6')
    phone.set(' Enter Contact no. ')

    txt_address.configure(fg='#a6a6a6')
    txt_address.delete(0.0, END)
    txt_address.insert(1.0, ' Enter Permanant Address ')


def entry_form():
    frame.pack(padx=25, pady=20)
    data_frame.pack_forget()


def submit():
    wb = load_workbook("web.xlsx")
    ws = wb['Sheet2']
    if(lbl_ninvaild_aadhar['text'] == "" and
            lbl_ninvaild_usn['text'] == "" and
            lbl_ninvaild['text'] == "" and
            lbl_ninvaild_phone['text'] == "" and
            txt_name.get() != ' Enter Fullname ' and
            txt_dob.get() != ' DD/MM/YYYY ' and
            txt_usn.get() != ' Enter USN ' and
            branch_val.get() != ' Select the Branch ' and
            sem_val.get() != ' Select the Semester ' and
            sec_val.get() != ' Select the Section ' and
            txt_aadhar.get() != ' xxxx-xxxx-xxxx ' and
            gen_val.get != "" and
            txt_phone.get() != ' Enter Contact no. ' and
            txt_address.get("1.0", "1.25") != ' Enter Permanant Address '):
        if messagebox.askokcancel('Question', 'Do you want to Submit', icon='question'):
            reg_val = ws.max_row
            name_val = sname.get()
            dob_val = dob.get()
            usn_val = usn.get()
            aadhar_val = int(aadhar.get())
            br_val = branch_val.get()
            semester_val = sem_val.get()
            section_val = sec_val.get()
            phone_val = int(phone.get())
            address_val = txt_address.get(0.0, END)
            gender_val = gen_val.get()

            fontstyle = Font(bold=True)

            ws['a1'].value = 'SI. No.'
            ws['a1'].font = fontstyle

            ws['b1'].value = 'Register No.'
            ws['b1'].font = fontstyle

            ws['c1'].value = 'USN'
            ws['c1'].font = fontstyle

            ws['d1'].value = 'Student Name'
            ws['d1'].font = fontstyle

            ws['e1'].value = 'Branch'
            ws['e1'].font = fontstyle

            ws['f1'].value = 'Semester'
            ws['f1'].font = fontstyle

            ws['g1'].value = 'Section'
            ws['g1'].font = fontstyle

            ws['h1'].value = 'Gender'
            ws['h1'].font = fontstyle

            ws['i1'].value = 'Aadhaar No.'
            ws['i1'].font = fontstyle

            ws['j1'].value = 'Phone No.'
            ws['j1'].font = fontstyle

            ws['k1'].value = 'Date of Birth'
            ws['k1'].font = fontstyle

            ws['l1'].value = 'Address'
            ws['l1'].font = fontstyle

            ws.cell(column=1, row=ws.max_row + 1, value=ws.max_row)
            ws.cell(column=2, row=ws.max_row, value=reg_val)
            ws.cell(column=3, row=ws.max_row, value=usn_val)
            ws.cell(column=4, row=ws.max_row, value=name_val)
            ws.cell(column=5, row=ws.max_row, value=br_val)
            ws.cell(column=6, row=ws.max_row, value=semester_val)
            ws.cell(column=7, row=ws.max_row, value=section_val)
            ws.cell(column=8, row=ws.max_row, value=gender_val)
            ws.cell(column=9, row=ws.max_row, value=aadhar_val)
            ws.cell(column=10, row=ws.max_row, value=phone_val)
            ws.cell(column=11, row=ws.max_row, value=dob_val)
            ws.cell(column=12, row=ws.max_row, value=address_val)
            clear()
            wb.save("web.xlsx")
    else:
        messagebox.showinfo('Warning', 'Please fill all the fields ')


form = Tk()
form.geometry("900x620")
form.title('form')
form.configure(bg='#e6e6e6')
form.resizable(True, 10)

wb = load_workbook("web.xlsx")
datasheet = wb['Sheet2']

entry = Menu(form)
form.configure(menu=entry)

frame = ctk.CTkFrame(form, fg_color='#fff', border_width=0, height=650, width=900, corner_radius=15)
frame.pack(padx=25, pady=20)

heading = Label(frame, text='Student Entry Form', fg="#000099", bg='#fff', font=('Bookman Old Style', 25, 'bold'))
heading.place(x=275, y=30)

data_frame = ctk.CTkFrame(form, border_width=0, fg_color='#fff', height=650, width=850, corner_radius=15)
data_frame.pack_forget()

data_frame_bar = ctk.CTkFrame(data_frame, border_width=0, fg_color='#666', height=450, width=750, corner_radius=15)
data_frame_bar.pack(padx=10, pady=70)


data_heading = Label(data_frame, text='Database Panel', fg="#000099", bg='#fff', font=('Bookman Old Style', 25, 'bold'))
data_heading.place(x=420, y=10)


scrollbarx = Scrollbar(data_frame_bar, orient=HORIZONTAL)
scrollbary = Scrollbar(data_frame, orient=VERTICAL)
list_values = list(datasheet.values)
cols = list_values[0]
tree = ttk.Treeview(data_frame_bar, column=cols, show="headings", yscrollcommand=scrollbary.set,
                    xscrollcommand=scrollbarx.set)
scrollbary.pack(side=RIGHT, fill=Y)
scrollbarx.pack(side=BOTTOM, fill=X)


def data_form():
    data_frame.pack(padx=25, pady=25)
    frame.pack_forget()
    tree.configure(height=20)

    wb = load_workbook("web.xlsx")
    datasheet = wb['Sheet2']

    tree.delete(*tree.get_children())
    list_values = list(datasheet.values)

    cols = list_values[0]

    for col_name in cols:
        tree.heading(col_name, text=col_name)

    for value_tuple in list_values[1:]:
        tree.insert('', END, values=value_tuple)

    tree.pack(padx=1, pady=2)
    scrollbary.config(command=tree.yview)
    scrollbarx.config(command=tree.xview)

    wb.save("web.xlsx")

entry.add_command(label="New Entry", command=entry_form)
entry.add_command(label="Database", command=data_form)

# ----------  Entry Form ---------
# ----------Student Register no.-----

def on_enter_reg(e):
    txt_reg.configure(fg='black')
    txt_reg.delete(0, 'end')


def on_leave_reg(e):
    if txt_reg.get() == '':
        txt_reg.configure(fg='#a6a6a6')
        txt_reg.insert(0, ' Autogenerated ')


reg = StringVar()
lbl_reg = Label(frame, text='Register No. : ', bg='#FFF', fg='black', font=('Times New Roman', 15, 'bold'))
lbl_reg.place(x=70, y=120)

txt_reg = Entry(frame, width=20, border=0.25, bg='#fff', fg='#a6a6a6', textvariable=reg, font=('Times New Roman', 13))
txt_reg.place(x=200, y=123)
txt_reg.insert(0, ' Autogenerated ')
txt_reg.configure(state='readonly')
txt_reg.bind("<FocusIn>", on_enter_reg)
txt_reg.bind("<FocusOut>", on_leave_reg)
Frame(frame, width=180, height=0.5, bg='black').place(x=200, y=145)

# --------name--------


def on_enter_name(e):
    if txt_name.get() == ' Enter Fullname ':
        txt_name.configure(fg='black')
        txt_name.delete(0, 'end')
        lbl_ninvaild.configure(text='')


def on_leave_name(e):
    era = 1
    if txt_name.get() == '':
        txt_name.configure(fg='#a6a6a6')
        txt_name.insert(0, ' Enter Fullname ')
        lbl_ninvaild.configure(text="")
    else:
        for char in txt_name.get():
            if (char.isalpha() or char == " ") and len(txt_name.get()) < 50:
                era = 0
            else:
                era = 1
                break
        if era == 1:
            lbl_ninvaild.configure(text=' Invaild Name')
        else:
            lbl_ninvaild.configure(text="")



sname = StringVar()
Label(frame, text='Full Name : ', bg='#fff', fg='black', font=('Times New Roman', 15, 'bold')).place(x=470, y=120)
txt_name = Entry(frame, width=25, border=0.25, bg='#fff', fg='#a6a6a6', textvariable=sname, font=('Times New Roman', 13))
txt_name.place(x=580, y=123)
lbl_ninvaild = Label(frame, text="", fg="red", bg="white", font=('Arial', 12))
lbl_ninvaild.place(x=580, y=150)
txt_name.insert(0, ' Enter Fullname ')
txt_name.bind("<FocusIn>", on_enter_name)
txt_name.bind("<FocusOut>", on_leave_name)
Frame(frame, width=250, height=0.5, bg='black').place(x=580, y=145)


# ----------date of birth-------


def on_enter_dob(e):
    if txt_dob.get() == " DD/MM/YYYY ":
        txt_dob.configure(fg='black')
        txt_dob.delete(0, 'end')


def on_leave_dob(e):
    if txt_dob.get() == '':
        txt_dob.configure(fg='#a6a6a6')
        txt_dob.insert(0, ' DD/MM/YYYY ')


def pickdate(event):
    global cal, date_window

    date_window = Toplevel()
    date_window.grab_set()
    date_window.title('Choose Date of Birth')
    date_window.geometry('250x250+590+370')
    cal = Calendar(date_window, selectmode="day", date_pattern="dd/mm/yyyy", borderwidth=1)
    cal.place(x=0, y=0)

    select_btn = Button(date_window, text="Select", width=25, height=1, command=grab_date, font=('Ariel', 13, 'bold'))
    select_btn.place(x=0, y=185)


def grab_date():
    txt_dob.delete(0, END)
    txt_dob.configure(fg='black')
    txt_dob.insert(0, cal.get_date())
    date_window.destroy()


dob = StringVar()
lbl_dob = Label(frame, text='Date of Birth : ', bg='#fff', fg='black', font=('Times New Roman', 15, 'bold'))
lbl_dob.place(x=70, y=190)
txt_dob = Entry(frame, width=25, border=0.25, bg='#fff', fg='#a6a6a6', font=('Times New Roman', 13), textvariable=dob)
txt_dob.place(x=200, y=193)
txt_dob.insert(0, ' DD/MM/YYYY ')
txt_dob.bind("<FocusIn>", on_enter_dob,)
txt_dob.bind("<1>", pickdate)
txt_dob.bind("<FocusOut>", on_leave_dob)
Frame(frame, width=175, height=0.5, bg='black').place(x=200, y=215)

# ---------USN-----


def on_enter_usn(e):
    if txt_usn.get() == ' Enter USN ':
        txt_usn.configure(fg='black')
        txt_usn.delete(0, 'end')
        lbl_ninvaild_usn.configure(text="")


def on_leave_usn(e):
    wb = load_workbook("web.xlsx")
    ws = wb['Sheet2']
    bran = ['EC', 'CS', 'IS', 'ME', 'CV', 'RO', 'BT', 'EE']
    year = ['20', '21', '22', '23', '24', '25', '26']
    usn_list = []
    if txt_usn.get() == '':
        txt_usn.configure(fg='#a6a6a6')
        txt_usn.insert(0, ' Enter USN ')
        lbl_ninvaild_usn.configure(text="")
    else:
        usn_list = txt_usn.get()

        era_usn = 0
        if len(usn_list) == 10 and (usn_list[0:3] == 'NNM' and year.count(usn_list[3:5]) and bran.count(usn_list[5:7]) and int(usn_list[7:10]) > 000):

            era_usn = 0
        else:
            era_usn = 1

        if era_usn == 1:
            lbl_ninvaild_usn.configure(text=' Invaild USN ')
        else:
            lbl_ninvaild_usn.configure(text="")
            txt_reg.configure(state='normal', bg='BLACK')
            txt_reg.delete(0, END)
            txt_reg.insert(0, ws.max_row)
            txt_reg.configure(state='readonly', fg='black')


usn = StringVar()
Label(frame, text='USN : ', bg='#fff', fg='black', font=('Times New Roman', 15, 'bold')).place(x=470, y=190)
txt_usn = Entry(frame, width=25, border=0.25, bg='#fff', fg='#a6a6a6', font=('Times New Roman', 13), textvariable=usn)
txt_usn.place(x=580, y=193)
lbl_ninvaild_usn = Label(frame, text="", fg="red", bg="white", font=('Arial', 12))
lbl_ninvaild_usn.place(x=580, y=220)

txt_usn.insert(0, ' Enter USN ')
txt_usn.bind("<FocusIn>", on_enter_usn)
txt_usn.bind("<FocusOut>", on_leave_usn)
Frame(frame, width=200, height=0.5, bg='black').place(x=580, y=215)


# ---------branch-----


Label(frame, text='Branch : ', bg='#fff', fg='black', font=('Times New Roman', 15, 'bold')).place(x=70, y=260)
branch_list = ['Artificial Intelligence and Data Science',
               'Artificial Intelligence and Machine Learning',
               'Biotechnology', 'Civil Engineering',
               'Computer Science and Engineering',
               'Computer and Communication Engineering',
               'Electrical and Electronics Engineering',
               'Electronics and Communication Engineering',
               'Information Science and Engineering',
               'Mechanical Engineering',
               'Robotics and Artificial Intelligence']
branch_val = StringVar()
branch_val.set(" Select the Branch ")
cmb_branch = OptionMenu(frame, branch_val, *branch_list)
cmb_branch.place(x=150, y=260)
cmb_branch.configure(font=("Times New Roman", 14), fg='black', bg='#fff', border=0)

# ----------Semester-----

Label(frame, text='Semester : ', bg='#fff', fg='black', font=('Times New Roman', 15, 'bold')).place(x=530, y=260)
sem_list = ['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII']
sem_val = StringVar()
sem_val.set(" Select the Semester ")
cmb_sem = OptionMenu(frame, sem_val, *sem_list)
cmb_sem.place(x=640, y=260)
cmb_sem.configure(font=("Times New Roman", 14), fg='black', bg='#fff', border=0)

# ----------Section-----

Label(frame, text='Section : ', bg='#fff', fg='black', font=('Times New Roman', 15, 'bold')).place(x=470, y=400)
sec_list = ['A', 'B', 'C', 'D']
sec_val = StringVar()
sec_val.set(" Select the Section ")
cmb_sec = OptionMenu(frame, sec_val, *sec_list)
cmb_sec.place(x=570, y=400)
cmb_sec.configure(font=("Times New Roman", 14), fg='black', bg='#fff', border=0)

# --------Aadhaar No.--------


def on_enter_aadhar(e):
    if txt_aadhar.get() == ' xxxx-xxxx-xxxx ':
        txt_aadhar.configure(fg='black')
        txt_aadhar.delete(0, 'end')
        lbl_ninvaild_aadhar.configure(text="")


def on_leave_aadhar(e):
    if txt_aadhar.get() == '':
        txt_aadhar.configure(fg='#a6a6a6')
        txt_aadhar.insert(0, ' xxxx-xxxx-xxxx ')
        lbl_ninvaild_aadhar.configure(text="")
    else:
        era_aadhar = 1
        if len(txt_aadhar.get()) == 12 and (txt_aadhar.get()).isdigit():
            era_aadhar = 0
        else:
            era_aadhar = 1

        if era_aadhar == 1:
            lbl_ninvaild_aadhar.configure(text=' Invaild Aadhar No.')
        else:
            lbl_ninvaild_aadhar.configure(text="")


aadhar = StringVar()
Label(frame, text='Aadhaar No. : ', bg='#fff', fg='black', font=('Times New Roman', 15, 'bold')).place(x=70, y=330)
txt_aadhar = Entry(frame, width=25, border=0.25, bg='#fff', fg='#a6a6a6', textvariable=aadhar,  font=('Times New Roman', 13,))
txt_aadhar.place(x=200, y=333)
txt_aadhar.insert(0, ' xxxx-xxxx-xxxx ')

lbl_ninvaild_aadhar = Label(frame, text="", fg="red", bg="white", font=('Arial', 12))
lbl_ninvaild_aadhar.place(x=200, y=360)

txt_aadhar.bind("<FocusIn>", on_enter_aadhar)
txt_aadhar.bind("<FocusOut>", on_leave_aadhar)
Frame(frame, width=130, height=0.5, bg='black').place(x=200, y=355)

# --------Phone no.--------


def on_enter_phone(e):
    if txt_phone.get() == ' Enter Contact no. ':
        txt_phone.configure(fg='black')
        txt_phone.delete(0, 'end')
        lbl_ninvaild_phone.configure(text="")


def on_leave_phone(e):
    if txt_phone.get() == '':
        txt_phone.configure(fg='#a6a6a6')
        txt_phone.insert(0, ' Enter Contact no. ')
        lbl_ninvaild_phone.configure(text="")

    else:
        era_phone = 1
        valid_num = ['6', '7', '8', '9']
        phone_num = txt_phone.get()
        if len(phone_num) == 10 and (phone_num[0] in valid_num) and phone_num.isdigit():
            era_phone = 0
        else:
            if len(phone_num) == 11 and phone_num[0] == '0' and phone_num.isdigit():
                era_phone = 0
            else:
                if len(phone_num) == 12 and phone_num[0:2] == '91' and phone_num.isdigit():
                    era_phone = 0

        if era_phone == 1:
            lbl_ninvaild_phone.configure(text=' Invaild Phone No.')
        else:
            lbl_ninvaild_phone.configure(text="")


phone = StringVar()
Label(frame, text='Phone No. : ', bg='#fff', fg='black', font=('Times New Roman', 15, 'bold')).place(x=470, y=330)
txt_phone = Entry(frame, width=25, border=0.25, bg='#fff', fg='#a6a6a6', textvariable=phone, font=('Times New Roman', 13))
txt_phone.place(x=580, y=333)
txt_phone.insert(0, ' Enter Contact no. ')

lbl_ninvaild_phone = Label(frame, text="", fg="red", bg="white", font=('Arial', 12))
lbl_ninvaild_phone.place(x=580, y=360)

txt_phone.bind("<FocusIn>", on_enter_phone)
txt_phone.bind("<FocusOut>", on_leave_phone)
Frame(frame, width=250, height=0.5, bg='black').place(x=580, y=355)

# ----------Gender-----

Label(frame, text='Gender : ', bg='#fff', fg='black', font=('Times New Roman', 15, 'bold')).place(x=70, y=400)
gen_val = StringVar()
Radiobutton(frame, text='male', fg='black', bg='white', font=('Times New Roman', 15, 'bold'), variable=gen_val, value='male').place(x=160, y=400)
Radiobutton(frame, text='female', fg='black', bg='white', font=('Times New Roman', 15, 'bold'), variable=gen_val, value='female').place(x=250, y=400)


# --------address--------


def on_enter_address(e):
    txt_address.configure(fg='black')
    if txt_address.get("1.0", "1.25") == ' Enter Permanant Address ':
        txt_address.delete(0.0, 'end')


def on_leave_address(e):
    if txt_address.get("1.0", "1.1") == "":
        txt_address.configure(fg='#a6a6a6')
        txt_address.insert(1.0, ' Enter Permanant Address ')


address = StringVar()
Label(frame, text='Address : ', bg='#fff', fg='black', font=('Times New Roman', 15, 'bold')).place(x=70, y=470)
txt_address = Text(frame, width=30, border=0.5, height=2, bg='#fff', fg='#a6a6a6', font=('Times New Roman', 13))
txt_address.place(x=155, y=475)
txt_address.insert(1.0, ' Enter Permanant Address ')
txt_address.bind("<FocusIn>", on_enter_address)
txt_address.bind("<FocusOut>", on_leave_address)
Frame(frame, width=250, height=0.5, bg='black').place(x=580, y=355)


# ----------Buttons----------

btn_submit = ctk.CTkButton(frame, text="Submit", fg_color='#0080ff', hover_color='#3333ff', corner_radius=5, width=150,
                           height=45, font=('Times New Roman', 20, 'bold'), cursor='hand2', command=submit)
btn_submit.place(x=120, y=548)

btn_clear = ctk.CTkButton(frame, text="Clear", fg_color='#0080ff', hover_color='#3333ff', corner_radius=5, width=150,
                          height=45, font=('Times New Roman', 20, 'bold'), cursor='hand2', command=clear)
btn_clear.place(x=580, y=548)


form.mainloop()
